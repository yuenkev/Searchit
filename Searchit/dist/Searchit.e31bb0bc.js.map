{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchInput","addEventListener","e","value","querySelector","showMessage","reddit","results","output","forEach","post","image","preview","images","source","url","title","truncateText","selftext","subreddit","score","innerHTML","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring"],"mappings":"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","file":"Searchit.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export default {\r\n  search: function (searchTerm, searchLimit, sortBy) {\r\n    return fetch(\r\n      `http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => data.data.children.map((data) => data.data))\r\n      .catch((err) => console.log(err));\r\n  },\r\n};\r\n","import reddit from \"./redditapi\";\r\n\r\nconst searchForm = document.getElementById(\"search-form\");\r\nconst searchInput = document.getElementById(\"search-input\");\r\n\r\n//Form Event Listener\r\nsearchForm.addEventListener(\"submit\", (e) => {\r\n  //Get Search Term\r\n  const searchTerm = searchInput.value;\r\n  //Get Sort\r\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n  //Get Limit\r\n  const searchLimit = document.getElementById(\"limit\").value;\r\n\r\n  //check Input\r\n  if (searchTerm === \"\") {\r\n    // Show a Message\r\n    showMessage(\"Please add a search term\", \"alert-danger\");\r\n  }\r\n\r\n  //Clear Input\r\n  searchInput.value = \"\";\r\n\r\n  //Search Reddit\r\n  reddit.search(searchTerm, searchLimit, sortBy).then((results) => {\r\n    let output = \"<div class=card-columns>\";\r\n    // Loop throught\r\n    results.forEach((post) => {\r\n      //Check for image\r\n      let image = post.preview\r\n        ? post.preview.images[0].source.url\r\n        : \"https://cdn.comparitech.com/wp-content/uploads/2017/08/reddit-1.jpg\";\r\n\r\n      output += `\r\n <div class=\"card\" style=\"width: 18rem;\">\r\n  <img src=\"${image}\" class=\"card-img-top\" alt=\"...\">\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">${post.title}</h5>\r\n    <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\r\n    <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read more!</a>\r\n      <hr>\r\n      <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span>\r\n      <span class=\"badge badge-dark\">Score: ${post.score}</span>\r\n    </div>\r\n</div>\r\n      `;\r\n    });\r\n    output += \"</div>\";\r\n    document.getElementById(\"results\").innerHTML = output;\r\n  });\r\n\r\n  //Prevents form from submiting\r\n  e.preventDefault();\r\n});\r\n\r\n// Show Message\r\nfunction showMessage(message, className) {\r\n  //Create the Div\r\n  const div = document.createElement(\"div\");\r\n  //Add Classes\r\n  div.className = `alert ${className}`;\r\n  // Add Text\r\n  div.appendChild(document.createTextNode(message));\r\n  //Get parent\r\n  const searchContainer = document.getElementById(\"search-container\");\r\n  //Get Search\r\n  const search = document.getElementById(\"search\");\r\n\r\n  //Insert Message\r\n  searchContainer.insertBefore(div, search);\r\n\r\n  //Timeout alert\r\n  setTimeout(() => document.querySelector(\".alert\").remove(), 3000);\r\n}\r\n\r\n// Truncate Text\r\nfunction truncateText(text, limit) {\r\n  const shortened = text.indexOf(\" \", limit);\r\n  if (shortened == -1) return text;\r\n  return text.substring(0, shortened);\r\n}\r\n"]}